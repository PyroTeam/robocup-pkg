<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find gazebo_sim_launch)/worlds/field2015_sixRobots.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <env name="ROSCONSOLE_FORMAT" value="[${node}]:${message}"/>
  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find generateur_taches)/cfg/custom_rosconsole.conf"/>

  <!-- Sensors real positions (constant args) -->
  <arg name="tf_laser_x" value="0.11 " /><!-- 0.10 + 0.01-->
  <arg name="tf_laser_y" value="0.0" />
  <arg name="tf_laser_z" value="0.255" /><!-- 0.235 + 0.0175 -->
  <arg name="tf_gripper_x" value="0.23" />
  <arg name="tf_gripper_y" value="0.00" />
  <arg name="tf_gripper_z" value="0.90" />
  <arg name="tf_towercam_x" value="0.20" />
  <arg name="tf_towercam_y" value="0.00" />
  <arg name="tf_towercam_z" value="0.53" />
  <arg name="tf_platformcam_x" value="0.0" />
  <arg name="tf_platformcam_y" value="0.00" />
  <arg name="tf_platformcam_z" value="0.90" />

  <!-- Others constant args -->
  <arg name="use_tf_prefix" value="true"/>

	<!-- Root params -->
	<param name="nbTeam" value="1" />
	<param name="team1" value="PYRO" />
	<param name="team2" value="" />

  <!-- Pyro TEAM -->
  <!-- Team Namespace -->
  <group ns="PYRO">
    <param name="nbRobot" value="1" />
    <param name="machineLocation/robot1" value="robotino1" />
    <param name="machineLocation/robot2" value="" />
    <param name="machineLocation/robot3" value="" />
    <param name="machineLocation/centralizedManager" value="" />
  </group>
  <!-- Robotino Pyro 1 -->
  <group ns="robotino1">
    <arg name="robotNamespace" value="robotino1"/>
                                                          <!-- Added slash is MANDATORY -->
    <arg if="$(arg use_tf_prefix)"     name="tf_prefix" value="$(arg robotNamespace)/"/>
    <arg unless="$(arg use_tf_prefix)" name="tf_prefix" value=""/>

    <param name="teamName" value="PYRO" />
    <param name="teamColor" value="magenta" />
    <param name="robotNumber" value="1" />
    <param name="robotName" value="R1" />
    <param name="simuRobotNamespace" value="$(arg robotNamespace)" />

    <param name="objectDetection/useSimLandmarks" value="false" />

    <!-- Load ArTag -->
    <include file="$(find ar_tag)/launch/alvar_simu.launch">
      <arg name="output_frame" value="$(arg tf_prefix)tower_camera_link"/>
      <arg name="respawn" value="true"/>
      <arg name="output" value="log"/>
    </include>
    <include file="$(find ar_tag)/launch/ar_tag.launch"/>

    <!-- Load the detection and localisation nodes -->
    <node pkg="localisation" name="landmarks_extraction" type="landmarks_extraction"/>
    <node pkg="localisation" name="visualisation" type="visualisation"/>
    <node pkg="localisation" name="odometry_correction" type="odometry_correction"/>
    <node pkg="localisation" name="cartographie" type="cartographie"/>

    <!-- Load the grid maker -->
    <rosparam command="load" file="$(find grid_maker)/cfg/fieldRoboCup2016.yaml" />
    <node pkg="grid_maker" name="grid_maker" type="grid_maker_node"/>

    <!-- Load the path finder -->
    <param name="navigation/pathFinder/aStarTieBreaking" value="true" />
    <param name="navigation/pathFinder/weightData" value="0.45" />
    <param name="navigation/pathFinder/weightSmooth" value="0.35" />
    <node pkg="path_finder" name="path_finder_node" type="path_finder_node"/>

    <!-- Load the path tracker -->
    <node pkg="topic_tools" name="mux_gridMap" type="mux" args="pathFinder/grid objectDetection/grid objectDetection/gridObstacles"/>
    <node pkg="path_tracker" name="grid_obstacles_node" type="grid_obstacles_node" output="screen"/>
    <!-- Load the path tracker -->
    <rosparam command="load" file="$(find path_tracker)/cfg/navigation_pathTracker.yaml" />
    <node pkg="path_tracker" name="path_tracker_node" type="path_tracker_node" output="screen"/>


    <!-- Load the fake final approach -->
    <node pkg="final_approach" name="final_approach" type="finalApproaching_node"/>

    <!-- Load the navigation manager -->
    <node pkg="navigation_manager" name="navigation_manager" type="navigation_manager_node"/>
    <node pkg="navigation_manager" name="move_request" type="moveRequest_node.py" />

    <!-- Load the refbox comm -->
    <node pkg="refbox_comm" name="refbox_comm" type="refBoxComm"/>

    <!-- Load the manager -->
    <node pkg="executeur_taches" name="executeur" type="test_exec" output="screen"/>
    <node pkg="generateur_taches" name="manager" type="main_node" output="screen"/>

    <!-- Load the gazebo_to_ros node -->
    <node pkg="gazebo_to_ros" name="gazebo_to_ros" type="gazebo_to_ros_node"/>

    <!-- Load the tf_broadcaster node -->
    <node pkg="tf_broadcaster" name="tf_broadcaster" type="tf_broadcaster_node">
      <param name="onlyOdomToBase" value="true"/>
    </node>



    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser_link" respawn="true" output="screen"
      args="$(arg tf_laser_x) $(arg tf_laser_y) $(arg tf_laser_z)
            0 0 0
            $(arg tf_prefix)base_link $(arg tf_prefix)laser_link   100" />

    <node pkg="tf" type="static_transform_publisher" name="base_link_to_gripper_link" respawn="true" output="screen"
      args="$(arg tf_gripper_x) $(arg tf_gripper_y) $(arg tf_gripper_z)
            0 0 0
            $(arg tf_prefix)base_link $(arg tf_prefix)gripper_link   100" />

    <node pkg="tf" type="static_transform_publisher" name="base_link_to_platform_camera_link" respawn="true" output="screen"
      args="$(arg tf_platformcam_x) $(arg tf_platformcam_y) $(arg tf_platformcam_z)
            -1.57 0 -1.57
            $(arg tf_prefix)base_link $(arg tf_prefix)platform_camera_link   100" />

    <node pkg="tf" type="static_transform_publisher" name="base_link_to_tower_camera_link" respawn="true" output="screen"
      args="$(arg tf_towercam_x) $(arg tf_towercam_y) $(arg tf_towercam_z)
            -1.57 0 -1.57
            $(arg tf_prefix)base_link $(arg tf_prefix)tower_camera_link   100" />

    <!-- AMCL -->
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
      <remap from="map" to="objectDetection/grid_fieldOnly"/>
      <remap from="scan" to="hardware/scan"/>

      <param name="odom_model_type" value="omni"/>
      <param name="odom_alpha5" value="0.1"/>
      <param name="transform_tolerance" value="0.2" />
      <param name="gui_publish_rate" value="10.0"/>
      <param name="laser_max_beams" value="30"/>

      <param name="min_particles" value="30"/>
      <param name="max_particles" value="500"/>

      <param name="kld_err" value="0.05"/>
      <param name="kld_z" value="0.99"/>

      <param name="odom_alpha1" value="0.2"/>
      <param name="odom_alpha2" value="0.2"/>
      <param name="odom_alpha3" value="0.8"/>
      <param name="odom_alpha4" value="0.2"/>

      <param name="laser_z_hit" value="0.5"/>
      <param name="laser_z_short" value="0.05"/>
      <param name="laser_z_max" value="0.05"/>
      <param name="laser_z_rand" value="0.5"/>
      <param name="laser_sigma_hit" value="0.2"/>
      <param name="laser_lambda_short" value="0.1"/>
      <param name="laser_model_type" value="likelihood_field"/>

      <param name="laser_likelihood_max_dist" value="1.0"/>
      <param name="update_min_d" value="0.2"/>
      <param name="update_min_a" value="0.5"/>
      <param name="resample_interval" value="1"/>
      <param name="transform_tolerance" value="0.1"/>
      <param name="recovery_alpha_slow" value="0.0"/>
      <param name="recovery_alpha_fast" value="0.0"/>

      <param name="use_map_topic" value="false"/>
      <param name="odom_frame_id" value="robotino1/odom"/>
      <param name="base_frame_id" value="robotino1/base_link"/>
    </node>

    <node pkg="localisation" type="initpose.sh" name="initpose" args="PYRO 1"/>

    <!-- Load the fakeSimLightDetection node -->
    <node pkg="feu_tricolore" name="simLightDetection" type="sim_light_detection"/>
  </group>

  <!-- Load rviz -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find gazebo_sim_launch)/others/thomas.rviz" >
    <remap from="/initialpose" to="/robotino1/initialpose"/>
  </node>
</launch>
